I've started by renaming =Report.toString()= to =Report.render()=, just like I
did for =ClassReport=.  Again, I am still not completely satisfied with it, but
it will do as a stop-gap measure.

I also took care of escaping special characters in =&lt;modified-fields&gt;=
tags.  This introduced an interesting twist.  When the value is changed,
=ClassReport= includes it in the content of the tag where it may need to be
escaped too.  But in tag content, I don't need to escape '"' or '''.  In fact,
the content is more human-readable if I don't.  So I split
=ClassReport.escapeXMLCharacters()= into
=ClassReport.escapeXMLCharactersInTagContent()= for tag content and
=ClassReport.escapeXMLCharactersInAttributeValue()=, a more thorough version
for attribute values.

Replaced of dependency on =com.sun.org.apache.xpath.internal.XPathAPI=, which
is internal and was giving me compiler warnings, with =javax.xml.xpath=.  The
code is just as clear and this time uses supported interfaces.
