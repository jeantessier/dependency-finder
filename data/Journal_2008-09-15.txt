A user contacted me asking how to collect the transitive closure of classes
from some starting point so they could build a single JAR file with only what's
needed.  Here's my recipe.

Suppose you want to package the tools for the CLI together with all the classes
they require, but no other.  First, get the total dependency graph for all the
JAR files in =lib/= and save the graph somewhere convenient:

    =DependencyExtractor -xml -out dependencies.xml *lib*=

Next, compute the outbound transitive closure from the
=com.jeantessier.dependencyfinder.cli= package:

    =DependencyClosure -xml -out closure.xml -start-includes */cli/* dependencies.xml=

Next, reduce the closure to classes only, eliminating =java.*= and
pseudo-classes like array types.  This step also removes the dependencies,
since we don't really need them anymore.

    =c2c -scope-excludes /^java/ -scope-excludes /\\[\\]/ -filter-excludes // closure.xml -xml -out closure.c2c.xml=

Finally, extract the class names from the output from the previous command.

    =DependencyGraphToFullyQualifiedNames -in closure.c2c.xml -out *classes.txt*=

Replace =lib= with your own JARs, and =/cli/= with your own starting point, and
you should be well on your way.

Bear in mind the
[[https://jeantessier.github.io/dependency-finder/Manual.html#TrickyBehavior][tricky behavior]]
around computing closures.  So you might want to reduce the dependency graph to
class-to-class dependencies before you compute the closure.
