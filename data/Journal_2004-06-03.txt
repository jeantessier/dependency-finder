As I was trying to explain scoping and filtering to someone, I came
upon a new way of explaining it.  The graph really has two dimensions:
aggregation between packages, classes, and features, and dependencies
between the nodes as a separate dimension.  Scoping select specific
nodes along the aggregation dimension, while filtering selects
specific dependencies along the other dimension.  Maybe that will make
it a little easier for people to understand what I mean and how to use
regular expressions in either context.

There was also some confusion around the
=com.jeantessier.dependency.Visitor= classes.  Most of them
traverse a graph and leave it intact, but =LinkMaximizer=
and =LinkMinimizer= actually modify the graph in-place.
This means that if you run either one of them on the nodes in a given
factory, you can access the maximized or minimized graph through that
same factory.  But if you use a =GraphCopier= to get a
subgraph, you need to go to the copier's internal factory to get at the
subgraph.
