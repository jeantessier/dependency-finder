Thought of a new feature for transitive closures.  I was tracking
calls that go through an interface-implementation transition a few
times.  Because of the dependency severing nature of those transitions,
I could not compute the closure for the whole call sequence
automatically.  This got me the idea that if the dependency graph were
to keep track of inheritance and implementation information, the tools
would be able to cross the interface-implementation transition and
compute larger sequences.  This will take some while.

Fixed the broken link to Perl help in the web app.

Fixed =extract.jsp= where I had forgotten to account for
the fact that =CodeDependencyCollector= was no longer a
=LoadListener=.

Fixed a number of setters that were mistakenly named
=getXXX()= when I changed the naming scheme.
