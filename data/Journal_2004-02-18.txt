Someone has been having a number of issues.  I'll be able to fix
some of them, but not all.

First, they analyzed classes with non-ASCII characters in
identifiers.  For example, a class name or method name that includes an
"&eacute;" character.  I was surprised that =javac= will let
you do such a thing; it turns out this is perfectly legal.  Anyway, the
encoding for XML output is UTF-8.  XML parsers cannot read the data
correctly because the characters in the stream do not correspond to the
UTF-8 encoding.  They would like me to ad an option to specify a custom
encoding.

I looked into this an since Dependency Finder simply write out
String objects, maybe I should simply use Java's default encoding
instead.  The documentation says this should be UTF-16, but when I try
it, Xerces complains about byte ordering.  And IE complains about the
encoding not being supported.  More thought needed.

Second, the =.class= file parser throws a
=ClassCastException= when it encounters unknown, illegally
constructed =attribute_info= structures.  Apparently, this
was with output from Visual Age for Java.  I logged it as bug
#900060.

I fixed it immediately as
[[http://sourceforge.net/tracker/index.php?func%3Ddetail&aid%3D900062&group_id%3D43305&atid%3D435886][patch #900062]].

Third, they encountered the situation I described on [[2004-02-03]].  I am
starting to think that maybe I should do something about it.  But what?

Fourth, and last, they tried to run =ClassReader= on a
whole JAR file.  It is designed for use on one file at a time (in
spite of what the documentation says), not on a whole codebase.  The
result is an invalid XML document with repeated DOCTYPE and no root
tag.  I'll try to fix that tomorrow.

Ran this journal through a spelling checker.
