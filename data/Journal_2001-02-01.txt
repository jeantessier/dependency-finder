I broke out the package and got rid of the Visitor
pattern in the
=jt.dependencygenerator.classreader=
package because I had only one simple visitable
object.

The extractor only reads from the constant pool,
which only holds references to methods that are
called and fields that are accessed.  Each field
and method entry later in the =.class=
file maintains its own index to the name and
descriptor (i.e., signature) in the constant pool.

I must parse deeper in the =.class=
file to extract field and method entries and
get the references I need from there.

I must also make sure that I capture dependencies
from local variables in methods!

Fran&ccedil;ois is looking for a JAR
comparison tool to analyze differences between two
versions of a given JAR file.  Once I've tuned the
=.class= file parser, we could use it to
extract API information from JAR files.
