Gave some more thought to having =Printer= work off a
=java.io.Writer= instead of a =StringBuffer=.
This would lessen the burden on memory by streaming large graphs
straight to file or output stream, but the character conversion might
add processing overhead.  The design below separates formatting of the
text by =DecoratorPrinter= from how that text is actually
saved by =FilePrinter= and =StringPrinter=.  The
latter behaves like the current =Printer= so I can compare
both approaches.  But beyond that, it makes little sense since I could
just as easily pass a =java.io.StringWriter= to the
decorator.

[[../images/DecoratorPrinter.jpg]]

This first scenario shows saving to a file.  Saving to an output
stream would look just the same.

[[../images/DecoratorPrinterFileScenario.jpg]]

This second scenario saves the graph to an in-memory string, though
I could just as easily do the same with a
=java.io.StringWriter=.

[[../images/DecoratorPrinterStringScenario.jpg]]

This design looks like overkill, since =FilePrinter= and
=StringPrinter= end up with empty implementations for their
=VisitX()= methods.  In fact, they don't even need to be
related to =Visitor= at all since they are not accessed
directly by the client code.  If I am going to define a new interface
for them, I might as well simply use =java.io.Writer=.

I will probably just replace the =StringBuffer= in
=Printer= with a =java.io.Writer= and be done
with it.

<blockquote>
<em>I'm not too happy with the way the sequence diagrams came out
too, but that's the fault of the tool I've been using.  And even the
class diagram has undesirable artifacts.  I have no budget for this
project, so I could not use the one I would have really wanted.  And
the one I ended up using was quicker to use than a plain drawing
editor.</em>
</blockquote>

I also kept looking at the new Xerces and Xalan.  All the unit tests
are passing, but =PublishedDiffToHTML= prints nothing when
I pass it a validation list.  I must figure out if this is due to the
new Xalan or the test data.  I tried a couple of code samples, but they
are still too large for me to track exactly what is going on.

I upgraded the libraries anyway, I will figure out the kinks
later:

<blockquote>
<table>
    <tr>
        <td>Xerces</td>
        <td>:</td>
        <td>2.2.1</td>
        <td>-></td>
        <td>2.3.0</td>
    </tr>
    <tr>
        <td>Xalan</td>
        <td>:</td>
        <td>2.4.1</td>
        <td>-></td>
        <td>2.5 D1</td>
    </tr>
</table>
</blockquote>
